Just wanted to let you know about what 'some' employers have in their minds.

After all, he just have this strong pride as a CS graduate who passed through a few hardcore classes, and I do think that such pride is being expressed in a somewhat distorted way. And sometimes it is very difficult to distinguish between value and pedantry. I was confused a lot back then as well, and still I am.

I really disagree with his pespective when he speaks about talents; he speaks as if some portion of people are destined to give up on CS, which is very wrong in my opinion, but if I try really hard to understand his intention, then may be I can. 
Well, forgive me if I speak nonsense here. Perhaps in the view of an owner of a tech company, his everyday concerns include screening all the unqualified applicants from job market given asymmetric information. He might have figured out some patterns (that only he could find) of how to be confident on choosing partners and what not. So it's something to think about at least. Frankly, it's them who makes decision on us anyway.
But besides all this gibberish and nonsense, I must admit that I kinda, started to understand, or at least, to get the hang of what he is talking about CS. I mean, I began to figure that what the old programmers back then achieved from hardcore courseworks are something very important to CS (but not necessarily about 'programming', those two are different). In that context, you will also know what he's talking about. Writing and maintaining a functional program is not everything about CS.
I hope you might start to skim through the book mentioned in the text (and basically mentioned everywhere on the web related to CS, as it is considered the de facto introductory book as well as the bible of CS), SICP (structure and interpretation of computer programming), when you have free time. Or at least try to take a look at a first few youtube lecture from MIT in 1980s, where the two writers of the book are the lecturers.

